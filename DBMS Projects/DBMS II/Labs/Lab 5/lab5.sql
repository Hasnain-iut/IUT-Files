DROP TABLE Transaction;
DROP TABLE Balance;
DROP TABLE AccountProperty;
DROP TABLE Account CASCADE CONSTRAINTS;

CREATE TABLE Transaction(
    TID INT PRIMARY KEY,
    AccNo INT,
    Amount NUMERIC,
    TransactionDate TIMESTAMP,
    FOREIGN KEY (AccNo) references Account
);

CREATE TABLE Balance(
    AccNo INT,
    PrincipalAmount NUMERIC,
    ProfitAmount NUMERIC,
    FOREIGN KEY (AccNo) references Account
);

CREATE TABLE AccountProperty(
    ID INT PRIMARY KEY,
    Name VARCHAR2(20),
    ProfitRate NUMERIC,
    GracePeriod INT  
);

CREATE TABLE Account(
    ID INT PRIMARY KEY,
    Name VARCHAR2(20),
    AccCode INT UNIQUE,
    OpeningDate TIMESTAMP,
    LastDateInterest TIMESTAMP,
    FOREIGN KEY (AccCode) references AccountProperty
);

INSERT INTO Account VALUES(1, 'Mamun', 2002, TO_TIMESTAMP('12-JAN-2020 11:45:00','DD-MON-YYYY HH24:MI:SS'), 
TO_TIMESTAMP('25-JAN-2023 11:45:00','DD-MON-YYYY HH24:MI:SS'));
INSERT INTO Account VALUES(2, 'Tahlil', 3003, TO_TIMESTAMP('11-JUN-2018 13:15:00','DD-MON-YYYY HH24:MI:SS'),
TO_TIMESTAMP('13-SEP-2022 11:45:00','DD-MON-YYYY HH24:MI:SS'));
INSERT INTO Account VALUES(3, 'Ridun', 4004, TO_TIMESTAMP('30-MAR-2016 8:45:00','DD-MON-YYYY HH24:MI:SS'),
TO_TIMESTAMP('21-AUG-2022 11:45:00','DD-MON-YYYY HH24:MI:SS'));
INSERT INTO Account VALUES(4, 'Muaz', 5005, TO_TIMESTAMP('21-JULY-2019 9:20:00','DD-MON-YYYY HH24:MI:SS'),
TO_TIMESTAMP('30-MAR-2022 11:45:00','DD-MON-YYYY HH24:MI:SS'));

INSERT INTO AccountProperty VALUES(2002, 'monthly', 2.8, 1);
INSERT INTO AccountProperty VALUES(3003, 'quarterly', 4.2, 4);
INSERT INTO AccountProperty VALUES(4004, 'biyearly', 6.8, 6);
INSERT INTO AccountProperty VALUES(5005, 'yearly', 8, 1);
    
--1
CREATE SEQUENCE ACC_SEQ
MINVALUE 100000
MAXVALUE 999999
START WITH 100000
INCREMENT BY 1;

CREATE OR REPLACE FUNCTION GENERATE_ACCOUNT_ID(NAME VARCHAR2, ACC_CODE INT,
OPENING_DATE DATE)
RETURN VARCHAR2
IS 
    ACCOUNT_ID VARCHAR2(24);
    NNN VARCHAR2(3);
    OPEN_DATE VARCHAR2(20);
BEGIN 
    SELECT TO_CHAR(OPENING_DATE, 'YYYYMMDD') INTO OPEN_DATE FROM DUAL;
    SELECT SUBSTR(NAME, 1, 3) INTO NNN FROM DUAL;
    SELECT CONCAT(CONCAT(CONCAT(CONCAT(CONCAT(ACC_CODE, 
                OPEN_DATE), '.'), NNN), '.'), ACC_SEQ.NEXTVAL) INTO ACCOUNT_ID
                FROM DUAL;

RETURN ACCOUNT_ID;
END;
/

--2

DELETE FROM ACCOUNT;
ALTER TABLE ACCOUNT DROP COLUMN ACCOUNT_ID CASCADE CONSTRAINTS;
ALTER TABLE Transaction DROP COLUMN AccNo CASCADE CONSTRAINTS;
ALTER TABLE Balance DROP COLUMN AccNo CASCADE CONSTRAINTS;

ALTER TABLE ACCOUNT ADD ACCOUNT_ID VARCHAR2(24) PRIMARY KEY;
ALTER TABLE Transaction ADD AccNo VARCHAR2(24);
ALTER TABLE Transaction ADD CONSTRAINT FK_TRANSACTION
FOREIGN KEY (AccNo) references Account;
ALTER TABLE Balance ADD AccNo VARCHAR2(24);
ALTER TABLE Balance ADD CONSTRAINT FK_BALANCE
FOREIGN KEY (AccNo) references Account;

--3
CREATE OR REPLACE TRIGGER ID_SETTER 
BEFORE INSERT ON Account
FOR EACH ROW
DECLARE 
    ID Account.ACCOUNT_ID%TYPE;
BEGIN 
    ID := GENERATE_ACCOUNT_ID(:NEW.NAME, :NEW.AccCode, :NEW.OpeningDate);
    :NEW.ACCOUNT_ID:= ID;
END;
/

--4
CREATE OR REPLACE TRIGGER INSERT_BALANCE
AFTER INSERT ON Account
FOR EACH ROW
DECLARE 
    ID Account.ACCOUNT_ID%TYPE;
BEGIN 
    ID:= :NEW.ACCOUNT_ID;
    INSERT INTO BALANCE VALUES(ID, 5000, 0);
END;
/

--5
CREATE OR REPLACE TRIGGER UPDATE_BALANCE
AFTER INSERT ON Transaction
FOR EACH ROW 
DECLARE 
    ID Account.ACCOUNT_ID%TYPE;
    AMOUNT Transaction.AMOUNT%TYPE;
BEGIN 
    ID:= :NEW.AccNo;
    AMOUNT:= :NEW.AMOUNT;

    UPDATE BALANCE 
    SET PrincipalAmount = PrincipalAmount + AMOUNT
    WHERE AccNo = ID;
END;
/
