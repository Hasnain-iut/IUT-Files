--1

CREATE OR REPLACE PROCEDURE FIND_TIME(TITLE IN VARCHAR2)
IS 
    time MOVIE.MOV_TIME%TYPE;
    total_time MOVIE.MOV_TIME%TYPE;
BEGIN
    SELECT MOV_TIME INTO TIME FROM MOVIE WHERE MOV_TITLE = TITLE;
    total_time := TIME + trunc(TIME/70) * 15;

    IF (MOD(TIME, 70) < 30) THEN

        total_time := total_time - 15;

    END IF;

    DBMS_OUTPUT.PUT_LINE(TRUNC(total_time/60)|| ' hrs and '|| TRUNC(MOD(total_time, 60))|| ' minutes ');
END;
/

set serveroutput on;
begin
    FIND_TIME('Blade Runner');
end;
/

--2
CREATE OR REPLACE PROCEDURE FIND_TOP_RATED(N IN NUMBER)
IS
begin
    FOR I IN 
    (SELECT * FROM (SELECT MOV_TITLE, AVG(REV_STARS) AS REV 
    FROM MOVIE NATURAL JOIN RATING
    GROUP BY MOV_TITLE ORDER BY REV DESC) WHERE ROWNUM<=N) LOOP
        DBMS_OUTPUT.PUT_LINE(I.MOV_TITLE || ' ' || I.REV);
    END loop;
end;
/

set serveroutput on;

begin
    FIND_TOP_RATED(10);
end;
/

--3
CREATE OR REPLACE FUNCTION YEARLY_EARNING(TITLE VARCHAR2)
RETURN NUMBER
IS 
    EARNING NUMBER; 
    YEARS NUMBER(8,2);
    RELEASE_DATE MOVIE.MOV_RELEASEDATE%TYPE;
    YEARLY_EARNING NUMBER(8,2);
BEGIN 
    FOR I IN
    (SELECT RATING.REV_STARS, MOVIE.MOV_RELEASEDATE
    FROM MOVIE NATURAL JOIN RATING WHERE MOV_TITLE = TITLE)
    LOOP 
        IF(I.REV_STARS >= 6) THEN
            EARNING:= EARNING+10;
        END IF;
    RELEASE_DATE:= I.MOV_RELEASEDATE;
    END LOOP;
    SELECT MONTHS_BETWEEN(SYSDATE, RELEASE_DATE) / 12 INTO YEARS FROM DUAL;
    YEARLY_EARNING := EARNING / YEARS; 
RETURN YEARLY_EARNING;
END;
/

set serveroutput on;

begin
    DBMS_OUTPUT.PUT_LINE(YEARLY_EARNING('Blade Runner'));
end;
/

--4
CREATE OR REPLACE FUNCTION FREQUENT_GENRE(DATE1 IN DATE, DATE2 IN DATE, MOV_NUM OUT NUMBER)
RETURN VARCHAR2
AS 
    GENRE_TITLE VARCHAR2;
BEGIN 
    SELECT GEN_TITLE INTO GENRE_TITLE, NUM INTO MOV_NUM FROM(
        SELECT GEN_TITLE, count(MOV_ID) AS NUM FROM
        GENRES NATURAL JOIN MTYPE WHERE MOV_ID IN(
            SELECT MOV_IDFROM MOVIE WHERE MOVIE.MOV_RELEASEDATE BETWEEN DATE1 AND DATE2
        )GROUP BY GEN_TITLE ORDER BY NUM DESC
    ) WHERE ROWNUM<=1;
    
RETURN GENRE_TITLE;
END;
/

